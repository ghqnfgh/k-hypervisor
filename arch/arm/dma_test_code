//static def 
//void *src_ = (void *)0x90000000;
//void *dst_ = (void *)0xa0000000;

/************************dma_test********************************
    uint32_t *src = src_;
    uint32_t *dst = dst_;
    int i = 0;
    static int dma_flag_id = 1;
    int counter = 0;
    dma_wait *value = (dma_wait*)malloc(sizeof(dma_wait));
****************************************************************/

/************************dma_test********************************
        if(dma_flag_id){

            for(i = 0; i < SIZ; i++){
                src[i] = i;
                dst[i] = -1;
            }

            InitQueue(&trans_queue);
            chain_enqueue((uint32_t)src, (uint32_t)dst, SIZ*sizeof(uint32_t));
            *value = Dequeue(&trans_queue);
            printf("%s, 0x%08x, 0x%08x, 0x%08x\n",__func__, value->src_addr, value->dst_addr, value->bc);
            dma_transfer(0, (uint32_t)value->src_addr, (uint32_t)value->dst_addr, value->bc);
            dma_flag_id = 0;
        } else if(dma_flag_id == 0){
            for(i = 0; i < SIZ; i++)
                if (src[i] == dst[i]) {
                    counter++;
                }

            for (i = 0; i < nums; i++) {
                int j;
                for (j = 0; j < SZ_32K; j++) {
                    if (src[i*SZ_32K + j] != dst[i*SZ_32K + j])
                        break;
                }
                if (j == SZ_32K) {
                    printf("correct %d\n", i);
                }
            }
****************************************************************/
